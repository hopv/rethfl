(set-logic HORN)
(set-info :source |
  Benchmark: /home/katsura/hflmc2/benchmark/ml/test_unsafe/xyz2.ml
  Generated by MoCHi
|)
(set-info :status unknown)
(declare-fun |fail_12[0:0]| ( Int) Bool)
(declare-fun |loopb[0:2]| ( Int  Int  Int) Bool)
(declare-fun |loopa[0:3][0:0]| ( Int  Int  Int  Int) Bool)
(declare-fun |loopa[0:2]| ( Int  Int  Int) Bool)
(assert (not (exists ((x0 Int)) (|fail_12[0:0]| x0))))
(assert (forall ((x0 Int)(x1 Int)(x3 Int)(x2 Int)) (=> (and (|loopb[0:2]| x1 x2 x3) (and (<= x1 0) (<= x3 0))) (|fail_12[0:0]| x0))))
(assert (forall ((x0 Int)(x1 Int)(x2 Int)(x3 Int)(x4 Int)(x5 Int)) (=> (and (|loopb[0:2]| x3 x4 x5) (and (= (+ 1 x0) x3) (and (= (+ 1 x1) x4) (and (= x2 (+ 2 x5)) (>= x3 1))))) (|loopb[0:2]| x0 x1 x2))))
(assert (forall ((x0 Int)(x1 Int)(x2 Int)(x3 Int)(x4 Int)(x5 Int)) (=> (and (|loopb[0:2]| x3 x4 x5) (and (= (+ 1 x0) x3) (and (= (+ 1 x1) x4) (and (= x2 (+ 2 x5)) (>= x3 1))))) (|loopb[0:2]| x0 x1 x2))))
(assert (forall ((x0 Int)(x1 Int)(x2 Int)) (=> (and (|loopa[0:3][0:0]| 0 0 0 x2) (and (= x0 10) (= x1 10))) (|loopb[0:2]| x0 x1 x2))))
(assert (forall ((x0 Int)(x1 Int)(x2 Int)(x6 Int)(x3 Int)(x4 Int)(x5 Int)) (=> (and (|loopa[0:2]| x0 x1 x2) (and (|loopa[0:3][0:0]| x3 x4 x5 x6) (and (<= x0 9) (and (= x3 (+ 1 x0)) (and (= x4 (+ 1 x1)) (= (+ 2 x5) x2)))))) (|loopa[0:3][0:0]| x0 x1 x2 x6))))
(assert (forall ((x0 Int)(x1 Int)(x2 Int)(x6 Int)(x3 Int)(x4 Int)(x5 Int)) (=> (and (|loopa[0:2]| x0 x1 x2) (and (|loopa[0:3][0:0]| x3 x4 x5 x6) (and (<= x0 9) (and (= x3 (+ 1 x0)) (and (= x4 (+ 1 x1)) (= (+ 2 x5) x2)))))) (|loopa[0:3][0:0]| x0 x1 x2 x6))))
(assert (forall ((x0 Int)(x1 Int)(x2 Int)(x6 Int)(x3 Int)(x4 Int)(x5 Int)) (=> (and (|loopa[0:2]| x0 x1 x2) (and (|loopa[0:3][0:0]| x3 x4 x5 x6) (and (<= x0 9) (and (= x3 (+ 1 x0)) (and (= x4 (+ 1 x1)) (= (+ 2 x5) x2)))))) (|loopa[0:3][0:0]| x0 x1 x2 x6))))
(assert (forall ((x0 Int)(x1 Int)(x2 Int)(x6 Int)(x3 Int)(x4 Int)(x5 Int)) (=> (and (|loopa[0:2]| x0 x1 x2) (and (|loopa[0:3][0:0]| x3 x4 x5 x6) (and (<= x0 9) (and (= x3 (+ 1 x0)) (and (= x4 (+ 1 x1)) (= (+ 2 x5) x2)))))) (|loopa[0:3][0:0]| x0 x1 x2 x6))))
(assert (forall ((x0 Int)(x1 Int)(x2 Int)(x6 Int)(x3 Int)(x4 Int)(x5 Int)) (=> (and (|loopa[0:2]| x0 x1 x2) (and (|loopa[0:3][0:0]| x3 x4 x5 x6) (and (<= x0 9) (and (= x3 (+ 1 x0)) (and (= x4 (+ 1 x1)) (= (+ 2 x5) x2)))))) (|loopa[0:3][0:0]| x0 x1 x2 x6))))
(assert (forall ((x0 Int)(x1 Int)(x2 Int)(x6 Int)(x3 Int)(x4 Int)(x5 Int)) (=> (and (|loopa[0:2]| x0 x1 x2) (and (|loopa[0:3][0:0]| x3 x4 x5 x6) (and (<= x0 9) (and (= x3 (+ 1 x0)) (and (= x4 (+ 1 x1)) (= (+ 2 x5) x2)))))) (|loopa[0:3][0:0]| x0 x1 x2 x6))))
(assert (forall ((x0 Int)(x1 Int)(x2 Int)(x6 Int)(x3 Int)(x4 Int)(x5 Int)) (=> (and (|loopa[0:2]| x0 x1 x2) (and (|loopa[0:3][0:0]| x3 x4 x5 x6) (and (<= x0 9) (and (= x3 (+ 1 x0)) (and (= x4 (+ 1 x1)) (= (+ 2 x5) x2)))))) (|loopa[0:3][0:0]| x0 x1 x2 x6))))
(assert (forall ((x0 Int)(x1 Int)(x2 Int)(x6 Int)(x3 Int)(x4 Int)(x5 Int)) (=> (and (|loopa[0:2]| x0 x1 x2) (and (|loopa[0:3][0:0]| x3 x4 x5 x6) (and (<= x0 9) (and (= x3 (+ 1 x0)) (and (= x4 (+ 1 x1)) (= (+ 2 x5) x2)))))) (|loopa[0:3][0:0]| x0 x1 x2 x6))))
(assert (forall ((x0 Int)(x1 Int)(x2 Int)(x6 Int)(x3 Int)(x4 Int)(x5 Int)) (=> (and (|loopa[0:2]| x0 x1 x2) (and (|loopa[0:3][0:0]| x3 x4 x5 x6) (and (<= x0 9) (and (= x3 (+ 1 x0)) (and (= x4 (+ 1 x1)) (= (+ 2 x5) x2)))))) (|loopa[0:3][0:0]| x0 x1 x2 x6))))
(assert (forall ((x0 Int)(x1 Int)(x2 Int)(x6 Int)(x3 Int)(x4 Int)(x5 Int)) (=> (and (|loopa[0:2]| x0 x1 x2) (and (|loopa[0:3][0:0]| x3 x4 x5 x6) (and (<= x0 9) (and (= x3 (+ 1 x0)) (and (= x4 (+ 1 x1)) (= (+ 2 x5) x2)))))) (|loopa[0:3][0:0]| x0 x1 x2 x6))))
(assert (forall ((x1 Int)(x2 Int)(x3 Int)(x0 Int)) (=> (and (|loopa[0:2]| x1 x2 x3) (and (>= x1 10) (= x0 x3))) (|loopa[0:3][0:0]| x1 x2 x3 x0))))
(assert (forall ((x0 Int)(x1 Int)(x2 Int)(x3 Int)(x4 Int)(x5 Int)) (=> (and (|loopa[0:2]| x3 x4 x5) (and (= x0 (+ 1 x3)) (and (= x1 (+ 1 x4)) (and (= (+ 2 x2) x5) (<= x3 9))))) (|loopa[0:2]| x0 x1 x2))))
(assert (forall ((x0 Int)(x1 Int)(x2 Int)(x3 Int)(x4 Int)(x5 Int)) (=> (and (|loopa[0:2]| x3 x4 x5) (and (= x0 (+ 1 x3)) (and (= x1 (+ 1 x4)) (and (= (+ 2 x2) x5) (<= x3 9))))) (|loopa[0:2]| x0 x1 x2))))
(assert (forall ((x0 Int)(x1 Int)(x2 Int)(x3 Int)(x4 Int)(x5 Int)) (=> (and (|loopa[0:2]| x3 x4 x5) (and (= x0 (+ 1 x3)) (and (= x1 (+ 1 x4)) (and (= (+ 2 x2) x5) (<= x3 9))))) (|loopa[0:2]| x0 x1 x2))))
(assert (forall ((x0 Int)(x1 Int)(x2 Int)(x3 Int)(x4 Int)(x5 Int)) (=> (and (|loopa[0:2]| x3 x4 x5) (and (= x0 (+ 1 x3)) (and (= x1 (+ 1 x4)) (and (= (+ 2 x2) x5) (<= x3 9))))) (|loopa[0:2]| x0 x1 x2))))
(assert (forall ((x0 Int)(x1 Int)(x2 Int)(x3 Int)(x4 Int)(x5 Int)) (=> (and (|loopa[0:2]| x3 x4 x5) (and (= x0 (+ 1 x3)) (and (= x1 (+ 1 x4)) (and (= (+ 2 x2) x5) (<= x3 9))))) (|loopa[0:2]| x0 x1 x2))))
(assert (forall ((x0 Int)(x1 Int)(x2 Int)(x3 Int)(x4 Int)(x5 Int)) (=> (and (|loopa[0:2]| x3 x4 x5) (and (= x0 (+ 1 x3)) (and (= x1 (+ 1 x4)) (and (= (+ 2 x2) x5) (<= x3 9))))) (|loopa[0:2]| x0 x1 x2))))
(assert (forall ((x0 Int)(x1 Int)(x2 Int)(x3 Int)(x4 Int)(x5 Int)) (=> (and (|loopa[0:2]| x3 x4 x5) (and (= x0 (+ 1 x3)) (and (= x1 (+ 1 x4)) (and (= (+ 2 x2) x5) (<= x3 9))))) (|loopa[0:2]| x0 x1 x2))))
(assert (forall ((x0 Int)(x1 Int)(x2 Int)(x3 Int)(x4 Int)(x5 Int)) (=> (and (|loopa[0:2]| x3 x4 x5) (and (= x0 (+ 1 x3)) (and (= x1 (+ 1 x4)) (and (= (+ 2 x2) x5) (<= x3 9))))) (|loopa[0:2]| x0 x1 x2))))
(assert (forall ((x0 Int)(x1 Int)(x2 Int)(x3 Int)(x4 Int)(x5 Int)) (=> (and (|loopa[0:2]| x3 x4 x5) (and (= x0 (+ 1 x3)) (and (= x1 (+ 1 x4)) (and (= (+ 2 x2) x5) (<= x3 9))))) (|loopa[0:2]| x0 x1 x2))))
(assert (forall ((x0 Int)(x1 Int)(x2 Int)(x3 Int)(x4 Int)(x5 Int)) (=> (and (|loopa[0:2]| x3 x4 x5) (and (= x0 (+ 1 x3)) (and (= x1 (+ 1 x4)) (and (= (+ 2 x2) x5) (<= x3 9))))) (|loopa[0:2]| x0 x1 x2))))
(assert (forall ((x0 Int)(x1 Int)(x2 Int)) (=> (and (= x0 0) (and (= x1 0) (= x2 0))) (|loopa[0:2]| x0 x1 x2))))
(check-sat)
(get-model)
(exit)
