(set-logic HORN)
(set-info :source |
  Benchmark: /home/hogeyama/kenkyu-code/hflmc2/benchmark/inputs/ml/test_safe_2019/adt/cat_maybes.ml
  Generated by MoCHi
|)
(set-info :status unknown)
(declare-fun |fail_153[0:0]| ( Int) Bool)
(declare-fun |length[0:2][0:0]| ( Int  Int) Bool)
(declare-fun |length[0:0]| ( Int) Bool)
(declare-fun |cat_maybes[0:2][0:0]| ( Int  Int) Bool)
(declare-fun |cat_maybes[0:1][0:1][0:1]| ( Int  Int  Bool  Int) Bool)
(declare-fun |cat_maybes[0:0]| ( Int) Bool)
(declare-fun |make_abstoptionlist[0:1][0:1][0:1][0:1]| ( Int  Int  Int  Bool  Int) Bool)
(declare-fun |length_27[0:2][0:0]| ( Int  Int) Bool)
(declare-fun |length_27[0:0]| ( Int) Bool)
(declare-fun |make_abstoptionlist[0:1][0:0]| ( Int  Int) Bool)
(declare-fun |make_abstoptionlist[0:0]| ( Int) Bool)
(assert (not (exists ((x0 Int)) (|fail_153[0:0]| x0))))
(assert (forall ((x0 Int)(x3 Int)(x4 Int)(x2 Int)(x1 Int)(var3250 Int)) (=> (and (|length[0:2][0:0]| x2 x4) (and (|cat_maybes[0:2][0:0]| x1 x2) (and (|length_27[0:2][0:0]| x1 x3) (and (|make_abstoptionlist[0:1][0:0]| var3250 x1) (<= (+ 1 x3) x4))))) (|fail_153[0:0]| x0))))
(assert (forall ((x1 Int)(x2 Int)(var3251 Int)(var3252 Int)) (=> (and (|length[0:2][0:0]| var3251 var3252) (and (|length[0:0]| x1) (and (>= x1 1) (and (= (+ 1 var3251) x1) (= x2 (+ 1 var3252)))))) (|length[0:2][0:0]| x1 x2))))
(assert (forall ((x1 Int)(x0 Int)) (=> (and (|length[0:0]| x1) (and (= x0 0) (<= x1 0))) (|length[0:2][0:0]| x1 x0))))
(assert (forall ((x1 Int)(x0 Int)) (=> (and (|length[0:0]| x0) (and (= (+ 1 x1) x0) (>= x0 1))) (|length[0:0]| x1))))
(assert (forall ((x2 Int)(x0 Int)(x1 Int)(var3253 Int)) (=> (and (|cat_maybes[0:2][0:0]| x0 x2) (and (|length_27[0:2][0:0]| x0 x1) (|make_abstoptionlist[0:1][0:0]| var3253 x0))) (|length[0:0]| x2))))
(assert (forall ((x0 Int)(x1 Int)(var3254 Int)(var3255 Int)(var3256 Int)) (=> (and (|cat_maybes[0:2][0:0]| var3254 var3255) (and (|cat_maybes[0:0]| x0) (and (|cat_maybes[0:1][0:1][0:1]| x0 0 true var3256) (and (>= x0 1) (and (= (+ 1 var3254) x0) (= x1 (+ 1 var3255))))))) (|cat_maybes[0:2][0:0]| x0 x1))))
(assert (forall ((x0 Int)(x1 Int)(var3258 Int)(var3257 Int)) (=> (and (|cat_maybes[0:1][0:1][0:1]| x0 0 false var3257) (and (|cat_maybes[0:2][0:0]| var3258 x1) (and (|cat_maybes[0:0]| x0) (and (= (+ 1 var3258) x0) (>= x0 1))))) (|cat_maybes[0:2][0:0]| x0 x1))))
(assert (forall ((x1 Int)(x0 Int)) (=> (and (|cat_maybes[0:0]| x1) (and (= x0 0) (<= x1 0))) (|cat_maybes[0:2][0:0]| x1 x0))))
(assert (forall ((x3 Int)(x2 Int)(x1 Int)) (=> (and (|cat_maybes[0:0]| x2) (and (|cat_maybes[0:1][0:1][0:1]| x2 0 false x1) (and (>= x2 1) (= (+ 1 x3) x2)))) (|cat_maybes[0:0]| x3))))
(assert (forall ((x6 Int)(x3 Int)(x4 Bool)(x5 Int)(x2 Int)(var3259 Int)(var3260 Int)(x1 Int)) (=> (and (|cat_maybes[0:0]| x6) (and (|cat_maybes[0:1][0:1][0:1]| x2 var3260 x4 x5) (and (|cat_maybes[0:0]| x2) (and (|cat_maybes[0:1][0:1][0:1]| x2 0 true x1) (and (>= x2 1) (and (= (+ 1 x6) x2) (and (= (+ 1 var3259) x2) (= var3260 (+ 1 x3))))))))) (|cat_maybes[0:1][0:1][0:1]| x6 x3 x4 x5))))
(assert (forall ((x4 Int)(x1 Int)(x2 Bool)(x3 Int)(var3262 Int)(x0 Int)) (=> (and (|make_abstoptionlist[0:1][0:0]| var3262 x4) (and (|make_abstoptionlist[0:1][0:1][0:1][0:1]| var3262 x4 x1 x2 x3) (and (|length_27[0:2][0:0]| x4 x0) (|cat_maybes[0:0]| x4)))) (|cat_maybes[0:1][0:1][0:1]| x4 x1 x2 x3))))
(assert (forall ((x3 Int)(x4 Int)(x0 Int)(x1 Bool)(x2 Int)(var3265 Int)(var3267 Int)(var3270 Int)(var3266 Int)(var3268 Int)(var3269 Int)) (=> (and (|make_abstoptionlist[0:1][0:0]| var3266 var3267) (and (|make_abstoptionlist[0:1][0:0]| var3268 var3269) (and (|make_abstoptionlist[0:1][0:1][0:1][0:1]| var3268 var3269 var3270 x1 x2) (and (|make_abstoptionlist[0:1][0:0]| x3 x4) (and (|make_abstoptionlist[0:0]| x3) (and (= var3265 (+ 1 var3267)) (and (= x4 (+ 1 var3267)) (and (= (+ 1 var3270) x0) (not (= x0 0)))))))))) (|make_abstoptionlist[0:1][0:1][0:1][0:1]| x3 x4 x0 x1 x2))))
(assert (forall ((x3 Int)(x4 Int)(x0 Int)(x1 Bool)(x2 Int)(var3273 Int)(var3275 Int)(var3274 Int)) (=> (and (|make_abstoptionlist[0:1][0:0]| var3274 var3275) (and (|make_abstoptionlist[0:1][0:0]| x3 x4) (and (|make_abstoptionlist[0:0]| x3) (and (= var3273 (+ 1 var3275)) (and (= x4 (+ 1 var3275)) (and (= x2 0) (and (= x0 0) (not x1)))))))) (|make_abstoptionlist[0:1][0:1][0:1][0:1]| x3 x4 x0 x1 x2))))
(assert (forall ((x0 Int)(x1 Int)(var3282 Int)(var3281 Int)) (=> (and (|make_abstoptionlist[0:1][0:0]| var3281 var3282) (and (|make_abstoptionlist[0:0]| x0) (= x1 (+ 1 var3282)))) (|make_abstoptionlist[0:1][0:0]| x0 x1))))
(assert (forall ((x0 Int)(x1 Int)) (=> (and (|make_abstoptionlist[0:0]| x0) (= x1 0)) (|make_abstoptionlist[0:1][0:0]| x0 x1))))
(assert (forall ((x0 Int)(x2 Int)) (=> (|make_abstoptionlist[0:0]| x2) (|make_abstoptionlist[0:0]| x0))))
(assert (forall ((x0 Int)(var3284 Int)(x1 Int)(x6 Int)(var3283 Int)(x5 Int)) (=> (and (|make_abstoptionlist[0:1][0:0]| var3283 x1) (and (|make_abstoptionlist[0:0]| x5) (and (= var3284 (+ 1 x1)) (not (= x6 0))))) (|make_abstoptionlist[0:0]| x0))))
(assert (forall ((x3 Int)(x2 Int)(x1 Int)) (=> (and (|cat_maybes[0:0]| x2) (and (|cat_maybes[0:1][0:1][0:1]| x2 0 true x1) (and (>= x2 1) (= (+ 1 x3) x2)))) (|cat_maybes[0:0]| x3))))
(assert (forall ((x4 Int)(x1 Int)(x2 Bool)(x3 Int)(var3291 Int)(x0 Int)) (=> (and (|make_abstoptionlist[0:1][0:0]| var3291 x4) (and (|make_abstoptionlist[0:1][0:1][0:1][0:1]| var3291 x4 x1 x2 x3) (and (|length_27[0:2][0:0]| x4 x0) (|cat_maybes[0:0]| x4)))) (|cat_maybes[0:1][0:1][0:1]| x4 x1 x2 x3))))
(assert (forall ((x3 Int)(x4 Int)(x0 Int)(x1 Bool)(x2 Int)(var3294 Int)(var3296 Int)(var3299 Int)(var3295 Int)(var3297 Int)(var3298 Int)) (=> (and (|make_abstoptionlist[0:1][0:0]| var3295 var3296) (and (|make_abstoptionlist[0:1][0:0]| var3297 var3298) (and (|make_abstoptionlist[0:1][0:1][0:1][0:1]| var3297 var3298 var3299 x1 x2) (and (|make_abstoptionlist[0:1][0:0]| x3 x4) (and (|make_abstoptionlist[0:0]| x3) (and (= var3294 (+ 1 var3296)) (and (= x4 (+ 1 var3296)) (and (= (+ 1 var3299) x0) (not (= x0 0)))))))))) (|make_abstoptionlist[0:1][0:1][0:1][0:1]| x3 x4 x0 x1 x2))))
(assert (forall ((x3 Int)(x4 Int)(x0 Int)(x1 Bool)(x2 Int)(var3302 Int)(var3304 Int)(var3303 Int)) (=> (and (|make_abstoptionlist[0:1][0:0]| var3303 var3304) (and (|make_abstoptionlist[0:1][0:0]| x3 x4) (and (|make_abstoptionlist[0:0]| x3) (and (= var3302 (+ 1 var3304)) (and (= x4 (+ 1 var3304)) (and (= x2 0) (and (= x0 0) (not x1)))))))) (|make_abstoptionlist[0:1][0:1][0:1][0:1]| x3 x4 x0 x1 x2))))
(assert (forall ((x0 Int)(x1 Int)(var3311 Int)(var3310 Int)) (=> (and (|make_abstoptionlist[0:1][0:0]| var3310 var3311) (and (|make_abstoptionlist[0:0]| x0) (= x1 (+ 1 var3311)))) (|make_abstoptionlist[0:1][0:0]| x0 x1))))
(assert (forall ((x0 Int)(x1 Int)) (=> (and (|make_abstoptionlist[0:0]| x0) (= x1 0)) (|make_abstoptionlist[0:1][0:0]| x0 x1))))
(assert (forall ((x0 Int)(x2 Int)) (=> (|make_abstoptionlist[0:0]| x2) (|make_abstoptionlist[0:0]| x0))))
(assert (forall ((x0 Int)(var3313 Int)(x1 Int)(x6 Int)(var3312 Int)(x5 Int)) (=> (and (|make_abstoptionlist[0:1][0:0]| var3312 x1) (and (|make_abstoptionlist[0:0]| x5) (and (= var3313 (+ 1 x1)) (not (= x6 0))))) (|make_abstoptionlist[0:0]| x0))))
(assert (forall ((x0 Int)(x1 Int)(var3316 Int)) (=> (and (|length_27[0:2][0:0]| x0 x1) (|make_abstoptionlist[0:1][0:0]| var3316 x0)) (|cat_maybes[0:0]| x0))))
(assert (forall ((x1 Int)(x2 Int)(var3317 Int)(var3318 Int)) (=> (and (|length_27[0:2][0:0]| var3317 var3318) (and (|length_27[0:0]| x1) (and (>= x1 1) (and (= (+ 1 var3317) x1) (= x2 (+ 1 var3318)))))) (|length_27[0:2][0:0]| x1 x2))))
(assert (forall ((x1 Int)(x0 Int)) (=> (and (|length_27[0:0]| x1) (and (= x0 0) (<= x1 0))) (|length_27[0:2][0:0]| x1 x0))))
(assert (forall ((x1 Int)(x0 Int)) (=> (and (|length_27[0:0]| x0) (and (= (+ 1 x1) x0) (>= x0 1))) (|length_27[0:0]| x1))))
(assert (forall ((x0 Int)(var3319 Int)) (=> (|make_abstoptionlist[0:1][0:0]| var3319 x0) (|length_27[0:0]| x0))))
(assert (forall ((x0 Int)(x1 Int)(var3321 Int)(var3320 Int)) (=> (and (|make_abstoptionlist[0:1][0:0]| var3320 var3321) (and (|make_abstoptionlist[0:0]| x0) (= x1 (+ 1 var3321)))) (|make_abstoptionlist[0:1][0:0]| x0 x1))))
(assert (forall ((x0 Int)(x1 Int)) (=> (and (|make_abstoptionlist[0:0]| x0) (= x1 0)) (|make_abstoptionlist[0:1][0:0]| x0 x1))))
(assert (forall ((x0 Int)(x2 Int)) (=> (|make_abstoptionlist[0:0]| x2) (|make_abstoptionlist[0:0]| x0))))
(assert (forall ((x0 Int)) (|make_abstoptionlist[0:0]| x0)))
(check-sat)
(get-model)
(exit)
