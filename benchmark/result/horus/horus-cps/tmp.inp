(echo "a result of unsat means that there is a model for the program clauses in which the goal clause does not hold")
(set-logic HORN)
(declare-rel x_10 (Int))
(declare-rel x_9 (Int Int))
(declare-rel x_13 (Int Int))
(declare-rel x_18 (Int Int))
(declare-rel x_15 (Int))
(declare-rel x_22 (Int Int))
(declare-rel x_29 (Int))
(declare-rel goal_ ())

(declare-var x_19 Int)
(declare-var x_23 Int)
(declare-var x_24 Int)
(declare-var x_32 Int)
(declare-var x_33 Int)
(declare-var x_34 Int)
(declare-var x_35 Int)
(declare-var x_36 Int)
(declare-var x_37 Int)
(declare-var x_38 Int)
(declare-var x_39 Int)
(declare-var x_40 Int)
(rule (=> (x_22 x_23 x_19) (x_15 x_23)))
(rule (=> (x_18 x_24 x_19) (x_9 x_24 (- x_19 1))))
(rule (=> (x_9 x_33 x_32) (x_22 x_33 x_32)))
(rule (=> (or (and (<= x_32 0) (x_22 0 x_32)) (and (> x_32 0) (x_10 (- x_32 1)))) (x_10 x_32)))
(rule (=> (> x_34 x_35) (x_13 x_35 x_34)))
(rule (=> (x_15 x_36) (x_29 x_36)))
(rule (=> (x_29 (+ x_37 x_38)) (x_18 x_38 x_37)))
(rule (=> (x_13 x_40 x_39) (x_9 x_40 x_39)))
(rule (=> (x_10 x_39) goal_))

(query goal_
  :print-answer true)
